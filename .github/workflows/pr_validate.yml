name: Validate DEV deployment config

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: 1. Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 2. Create Databricks Config File
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_URL_DEV }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN_DEV }}
        run: |
          echo "[dev]" > /home/runner/.databrickscfg
          echo "host = $DATABRICKS_HOST" >> /home/runner/.databrickscfg
          echo "token = $DATABRICKS_TOKEN" >> /home/runner/.databrickscfg

      # - name: Install python dependencies
      #   run: |
      #     # python -m pip install --upgrade pip
      #     # pip install jinja2
      #     # pip install argparse
      #     # pip install pyyaml
      # - name: Install Poetry
      #   run: |
      #     echo "Install Poetry"
      #     curl -sSL https://install.python-poetry.org | python3 -
      # - name: Install libkrb5
      #   run: |
      #     echo "Install libkrb5"
      #     sudo apt-get update
      #     sudo apt-get install -y libkrb5-dev
      # - name: Install dependencies
      #   run: |
      #     echo "Install dependencies"
      #     poetry install
      - name: 3. Install databricks
        run: |
          echo "Install databricks"
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh

      - name: 4. Install modules
        run: |
          pip install Jinja2
          pip install pyyaml

      - name: 5. Running Validate on dev
        run: |
          echo "Validate the dev configuration"
          make validate ENV=dev

      # - name: Running Validate on dev
      #   run: |
      #     pwd

      # - name: Running Validate on dev
      #   run: |
      #     ls -al /home/runner 


